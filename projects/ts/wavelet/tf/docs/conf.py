# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

# -- Project information -----------------------------------------------------

project = 'super_qi'
copyright = '2022, 张志峰(Zhifeng Zhang)'
author = '张志峰(Zhifeng Zhang)'

# The full version, including alpha/beta/rc tags
release = '0.1'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = ['sphinx.ext.githubpages'
             ,'sphinx.ext.viewcode'
             ,'sphinx.ext.mathjax'
             ,'sphinx.ext.imgmath'
             ,'sphinx.ext.autodoc'
             ,'sphinx.ext.graphviz'
             ,'sphinxcontrib.tikz'
             #,'sphinxcontrib.gnuplot'
             #,'recommonmark'
             #,'sphinx_rtd_theme'
             ,'sphinxcontrib.plantuml'
             #,'nbsphinx'
             #,'jupyter_sphinx.execute'
             #,'sphinxcontrib.jupyter'
             #,'RunNotebook'
             ,'sphinxcontrib.proof'
             ,'sphinx_typo3_theme'
             #,'sphinx_a4doc'
             ,'sphinxcontrib.pseudocode'
             #,'myst_parser'
             #,'myst_nb'
             ,'nbsphinx'
]

# Add any paths that contain templates here, relative to this directory.
#templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'zh_CN'
#language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns =  ['_build'
                    ,'Thumbs.db'
                    ,'.DS_Store'
                    ,'books'
                    ,'articles'
                    ]

# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
#html_theme = 'sphinx_typo3_theme'
#html_theme = 'alabaster'
#html_theme = 'sphinx_rtd_theme'
#html_theme = 'python_docs_theme'
#html_theme_options = {
#    'collapsiblesidebar': True,
#    'issues_url': 'https://github.com/python/devguide/issues/new',
#}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
# https://docs.readthedocs.io/en/stable/guides/adding-custom-css.html

html_static_path = ['_static']

#html_theme_options = {
#    "style_external_links": "true",
    #"style_nav_header_background": "#0b750a"
#}

html_css_files = {'css/custom.css'
                 #,'css/a4doc_railroad_diagram.css'
}

plantuml = 'java -Djava.awt.headless=true -jar /opt/plantuml/plantuml.jar'

try:
    import sphinx_typo3_theme
    is_imported = True
except:
    is_imported = False
if is_imported:
    version = sphinx_typo3_theme.__version__
    release = sphinx_typo3_theme.__version__
    html_theme = 'sphinx_typo3_theme'
    html_theme_path =[sphinx_typo3_theme.get_html_theme_path()]

# -- Extension configuration -------------------------------------------------

# -- Options specific to sphinxcontrib-tikz -------------------------------

# For latex target the tikzlibraries have to be specified explicitly
tikz_tikzlibraries = 'arrows, topaths, positioning, shadows, backgrounds'

# Use default suite
#tikz_proc_suite = "GhostScript"
tikz_proc_suite = "pdf2svg"
#imgmath_image_format = "png"

#imgmath_latex_preamble = r'''
#  \usepackage{xcolor}
#'''

#graphviz_output_format = 'svg'

from os.path import dirname
a4_base_path = dirname(__file__) + '/grammar'
#numfig = True

_PREAMBLE = r"""
\usepackage{amsmath}
\usepackage{amsfonts}
"""
latex_elements = {
'preamble': _PREAMBLE,
# other settings go here
}

import re
mathjax_config = { 'TeX': {'Macros': {}}}

with open('mathsymbols.tex', 'r') as f:
    for line in f:
        macros = re.findall(r'\\(DeclareRobustCommand|newcommand){\\(.*?)}(\[(\d)\])?{(.+)}', line)
        for macro in macros:
            if len(macro[2]) == 0:
                mathjax_config['TeX']['Macros'][macro[1]] = "{"+macro[4]+"}"
            else:
                mathjax_config['TeX']['Macros'][macro[1]] = ["{"+macro[4]+"}", int(macro[3])]

mathjax3_config = {
'tex': {'tags': 'ams', 'useLabelIds': True},
}

""" source_suffix = {'.rst': 'restructuredtext'
                ,'.ipynb': 'myst-nb'
                ,'.myst': 'myst-nb'
                ,'.md': 'myst-nb'
}
 """
""" myst_enable_extensions = ["amsmath"
                         ,"colon_fence"
                         ,"deflist"
                         ,"dollarmath"
                         ,"fieldlist"
                         ,"html_admonition"
                         ,"html_image"
                         #,"linkify"
                         ,"replacements"
                         ,"smartquotes"
                         ,"strikethrough"
                         ,"substitution"
                         ,"tasklist"
                         ]
 """
""" nb_custom_formats = {".Rmd": ["jupytext.reads", {"fmt": "Rmd"}]}
nb_execution_mode = "cache"
nb_execution_show_tb = "READTHEDOCS" in os.environ
nb_execution_timeout = 60  # Note: 30 was timing out on RTD
 """

nbsphinx_kernel_name = 'python3'
suppress_warnings = [
    'nbsphinx',
]

# These projects are also used for the sphinx_codeautolink extension:
intersphinx_mapping = {
    'IPython': ('https://ipython.readthedocs.io/en/stable/', None),
    'matplotlib': ('https://matplotlib.org/', None),
    'numpy': ('https://docs.scipy.org/doc/numpy/', None),
    'pandas': ('https://pandas.pydata.org/docs/', None),
    'python': ('https://docs.python.org/3/', None),
}

# Don't add .txt suffix to source files:
html_sourcelink_suffix = ''

# List of arguments to be passed to the kernel that executes the notebooks:
nbsphinx_execute_arguments = [
    "--InlineBackend.figure_formats={'svg', 'pdf'}",
]

# Environment variables to be passed to the kernel:
os.environ['MY_DUMMY_VARIABLE'] = 'Hello from conf.py!'

nbsphinx_thumbnails = {
    'gallery/thumbnail-from-conf-py': 'gallery/a-local-file.png',
    'gallery/*-rst': 'images/notebook_icon.png',
}

# Support for notebook formats other than .ipynb
nbsphinx_custom_formats = {
    '.pct.py': ['jupytext.reads', {'fmt': 'py:percent'}],
    '.md': ['jupytext.reads', {'fmt': 'Rmd'}],
}

# Import Matplotlib to avoid this message in notebooks:
# "Matplotlib is building the font cache; this may take a moment."
import matplotlib.pyplot
